 ***************************************************************************

   Canon SELPHY ES/CP series print assister 

   (c) 2007-2013 Solomon Peachy <pizza@shaftnet.org>

   The latest version of this program can be found at
  
   http://git.shaftnet.org/git/gitweb.cgi?p=selphy_print.git

 ***************************************************************************
 
   The SELPHY ES/CP series of dye-sublimation photo printers from Canon 
   generally require intelligent buffering of the raw print data in order 
   to keep the printer from locking up.  This tool accomplishes just that.

   Verified supported printers:
  
     ES1, ES2, ES3, ES30, ES40, CP-100, CP-200, CP-300, CP-330, CP400, 
     CP500, CP510, CP710, CP720, CP730, CP740, CP750, CP760, CP770, CP780, 
     CP800, CP900

   Unverified/untested, but should work:

     ES20, CP-220, CP530, CP600, CP810

   Semi-supported (has problems)

     CP-10

   NOT currently supported by libusb backend:  (USB PIDs unknown)  **
	
     CP520, CP790

    ** Note that a PID can be supplied on the command line, see below.
       Once the PIDs are known, these printers are expected to work.

 ***************************************************************************
 Compilation:

  You will need libusb-1.0 to build this tool.

   Fedora/RedHat:
	yum install libusb1-devel
   Debian/Ubuntu
	apt-get install libusb-1.0-0-dev

  And all you need to do after that is type 'make'

 ***************************************************************************
 CUPS backend usage:

	cp selphy_print /usr/lib/cups/backend/selphy
	chown root:root /usr/lib/cups/backend/selphy
	chmod 700 /usr/lib/cups/backend/selphy

   You may need to restart CUPS, and you will also need gutenprint 5.2.10
   or newer installed.  (This backend is bundled with gutenprint starting with
   v5.2.10)

   Without the rest of gutenprint installed, this is useless as a CUPS backend.

 ***************************************************************************
 Standalone usage:

  	selphy_print filename
	selphy_print - < filename
	somecommand | selphy_print -

   To test out an unknown USB model, specify the PID and its type as 
   environment variables.  For example:

	SELPHY_PID=3ab1 SELPHY_TYPE=3 selphy_print filename

	SELPHY_PID is the USB PID, in hex
	SELPHY_TYPE is: 3 for CP790
			4 for CP520 (or other CP-series model)

   If you have a model the spooler doesn't recognize but it works with
   a PID/TYPE specification, please let me know via e-mail.

